"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[468],{5217:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var t=o(4848),r=o(8453);const s={sidebar_position:2},i="Usage",c={id:"introduction/usage",title:"Usage",description:"How to use react-py in your project. For framework specific guides, see the sidebar.",source:"@site/docs/introduction/usage.md",sourceDirName:"introduction",slug:"/introduction/usage",permalink:"/react-py/docs/introduction/usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/react-py/docs/introduction/getting-started"},next:{title:"Usage with Vite",permalink:"/react-py/docs/introduction/vite-usage"}},d={},p=[{value:"<code>PythonProvider</code> Provider",id:"pythonprovider-provider",level:2},{value:"<code>usePython</code> Hook",id:"usepython-hook",level:2},{value:"<code>usePythonConsole</code> Hook",id:"usepythonconsole-hook",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.useMDXComponents)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["How to use ",(0,t.jsx)(n.code,{children:"react-py"})," in your project. For framework specific guides, see the sidebar."]}),"\n",(0,t.jsxs)(n.h2,{id:"pythonprovider-provider",children:[(0,t.jsx)(n.code,{children:"PythonProvider"})," Provider"]}),"\n",(0,t.jsxs)(n.p,{children:["First, wrap your app in a ",(0,t.jsx)(n.code,{children:"PythonProvider"})," component. For props, see the ",(0,t.jsx)(n.a,{href:"../introduction/api-reference#pythonprovider",children:"API reference docs"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { PythonProvider } from 'react-py'\n\nfunction App() {\n  return (\n    // Add the provider to your app\n    <PythonProvider>\n      <Codeblock />\n    </PythonProvider>\n  )\n}\n\nrender(<App />, document.getElementById('root'))\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"usepython-hook",children:[(0,t.jsx)(n.code,{children:"usePython"})," Hook"]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"usePython"})," hook to run code and access both stdout and stderr. For props, see the ",(0,t.jsx)(n.a,{href:"../introduction/api-reference#usepython-and-usepythonconsole-hooks",children:"API reference docs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Try the example, ",(0,t.jsx)(n.a,{href:"/react-py/docs/examples/basic-example",children:"Basic Example"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useState } from 'react'\nimport { usePython } from 'react-py'\n\nfunction Codeblock() {\n  const [input, setInput] = useState('')\n\n  // Use the usePython hook to run code and access both stdout and stderr\n  const { runPython, stdout, stderr, isLoading, isRunning } = usePython()\n\n  return (\n    <>\n      {isLoading ? <p>Loading...</p> : <p>Ready!</p>}\n      <form>\n        <textarea\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your code here\"\n        />\n        <input\n          type=\"submit\"\n          value={!isRunning ? 'Run' : 'Running...'}\n          disabled={isLoading || isRunning}\n          onClick={(e) => {\n            e.preventDefault()\n            runPython(input)\n          }}\n        />\n      </form>\n      <p>Output</p>\n      <pre>\n        <code>{stdout}</code>\n      </pre>\n      <p>Error</p>\n      <pre>\n        <code>{stderr}</code>\n      </pre>\n    </>\n  )\n}\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"usepythonconsole-hook",children:[(0,t.jsx)(n.code,{children:"usePythonConsole"})," Hook"]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"usePythonConsole"})," hook to emulate a Python console to run code and access both stdout and stderr. For props, see the ",(0,t.jsx)(n.a,{href:"../introduction/api-reference#usepython-and-usepythonconsole-hooks",children:"API reference docs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Try the example, ",(0,t.jsx)(n.a,{href:"/react-py/docs/examples/repl",children:"REPL"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The Python console is not affected by the globally set ",(0,t.jsx)(n.code,{children:"lazy"})," or ",(0,t.jsx)(n.code,{children:"terminateOnCompletion"})," props."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useEffect, useState } from 'react'\nimport { usePythonConsole } from 'react-py'\nimport { ConsoleState } from 'react-py/dist/types/Console'\n\nfunction Codeblock() {\n  const [input, setInput] = useState('')\n  const [output, setOutput] = useState('')\n\n  const {\n    runPython,\n    stdout,\n    stderr,\n    isLoading,\n    isRunning,\n    banner,\n    consoleState\n  } = usePythonConsole()\n\n  useEffect(() => {\n    setOutput((prev) => [...prev, stdout])\n  }, [stdout])\n\n  useEffect(() => {\n    setOutput((prev) => [...prev, stderr])\n  }, [stderr])\n\n  function getPrompt() {\n    return consoleState === ConsoleState.incomplete ? '... ' : '>>> '\n  }\n\n  function run() {\n    setOutput((prev) => [...prev, getPrompt() + input + '\\n'])\n    runPython(input)\n  }\n\n  return (\n    <>\n      {isLoading ? <p>Loading...</p> : <p>Ready!</p>}\n      <p>\n        <b>Output</b>\n      </p>\n      <pre>\n        {banner}\n        <br />\n        {output}\n      </pre>\n      <pre>\n        {getPrompt()}\n        <form>\n          <textarea\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Enter your code here\"\n          />\n          <input\n            type=\"submit\"\n            value={!isRunning ? 'Run' : 'Running...'}\n            disabled={isLoading || isRunning}\n            onClick={(e) => {\n              e.preventDefault()\n              run()\n            }}\n          />\n        </form>\n      </pre>\n    </>\n  )\n}\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.useMDXComponents)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.r(n),o.d(n,{MDXProvider:()=>c,useMDXComponents:()=>i});var t=o(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);