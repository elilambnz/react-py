"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[307],{5680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>d,MDXProvider:()=>l,mdx:()=>f,useMDXComponents:()=>u,withMDXComponents:()=>p});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach(function(n){o(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),p=function(e){return function(n){var t=u(n.components);return r.createElement(e,i({},n,{components:t}))}},u=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(d.Provider,{value:n},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef(function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=u(t),l=o,m=p["".concat(a,".").concat(l)]||p[l]||h[l]||i;return t?r.createElement(m,s(s({ref:n},d),{},{components:t})):r.createElement(m,s({ref:n},d))});function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=y;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},8999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=t(8168),o=(t(6540),t(5680));const i={sidebar_position:4},a="Usage with Next.js",s={unversionedId:"introduction/nextjs-usage",id:"introduction/nextjs-usage",title:"Usage with Next.js",description:"react-py is not Server-Side Rendering (SSR) friendly, due to client only APIs such as web workers. To use this package with Next.js, ensure it is loaded on the client side only.",source:"@site/docs/introduction/nextjs-usage.md",sourceDirName:"introduction",slug:"/introduction/nextjs-usage",permalink:"/react-py/docs/introduction/nextjs-usage",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Usage with Vite",permalink:"/react-py/docs/introduction/vite-usage"},next:{title:"Usage with Docusaurus",permalink:"/react-py/docs/introduction/docusaurus-usage"}},c={},d=[{value:"Adding the <code>PythonProvider</code>",id:"adding-the-pythonprovider",level:2},{value:"Using the <code>usePython</code> hook",id:"using-the-usepython-hook",level:2},{value:"Service worker",id:"service-worker",level:2}],p={toc:d},u="wrapper";function l({components:e,...n}){return(0,o.mdx)(u,(0,r.default)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"usage-with-nextjs"},"Usage with Next.js"),(0,o.mdx)("admonition",{type:"info"},(0,o.mdx)("p",{parentName:"admonition"},(0,o.mdx)("inlineCode",{parentName:"p"},"react-py")," is not Server-Side Rendering (SSR) friendly, due to client only APIs such as web workers. To use this package with ",(0,o.mdx)("a",{parentName:"p",href:"https://nextjs.org"},"Next.js"),", ensure it is loaded on the client side only.")),(0,o.mdx)("p",null,"You can ensure that a component is loaded on the client side only by using ",(0,o.mdx)("a",{parentName:"p",href:"https://nextjs.org/docs/getting-started/react-essentials#client-components"},"Client Components"),"."),(0,o.mdx)("h2",{id:"adding-the-pythonprovider"},"Adding the ",(0,o.mdx)("inlineCode",{parentName:"h2"},"PythonProvider")),(0,o.mdx)("p",null,"To ensure proper usage of the provider, import it only on the client side. Make sure any hooks using the provider are placed below the provider import. For example, your ",(0,o.mdx)("inlineCode",{parentName:"p"},"page.tsx")," file may look like:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-tsx"},"'use client'\n\nimport { PythonProvider } from 'react-py'\n\nimport Codeblock from './components/Codeblock'\n\nexport default function Home() {\n  return (\n    <PythonProvider>\n      <main>\n        <Codeblock />\n      </main>\n    </PythonProvider>\n  )\n}\n")),(0,o.mdx)("h2",{id:"using-the-usepython-hook"},"Using the ",(0,o.mdx)("inlineCode",{parentName:"h2"},"usePython")," hook"),(0,o.mdx)("p",null,"Then simply use hooks in ",(0,o.mdx)("inlineCode",{parentName:"p"},"components/Codeblock.tsx")," as follows:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-tsx"},"'use client'\n\nimport { useState } from 'react'\nimport { usePython } from 'react-py'\n\nexport default function Codeblock() {\n  const [input, setInput] = useState('')\n\n  // Use the usePython hook to run code and access both stdout and stderr\n  const { runPython, stdout, stderr, isLoading, isRunning } = usePython()\n\n  return (\n    <>\n      {isLoading ? <p>Loading...</p> : <p>Ready!</p>}\n      <form>\n        <textarea\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your code here\"\n        />\n        <input\n          type=\"submit\"\n          value={!isRunning ? 'Run' : 'Running...'}\n          disabled={isLoading || isRunning}\n          onClick={(e) => {\n            e.preventDefault()\n            runPython(input)\n          }}\n        />\n      </form>\n      <p>Output</p>\n      <pre>\n        <code>{stdout}</code>\n      </pre>\n      <p>Error</p>\n      <pre>\n        <code>{stderr}</code>\n      </pre>\n    </>\n  )\n}\n")),(0,o.mdx)("h2",{id:"service-worker"},"Service worker"),(0,o.mdx)("p",null,"The service worker that handles ",(0,o.mdx)("inlineCode",{parentName:"p"},"stdin")," must be accessible from the root of your site to handle incoming fetch requests. By default, Next.js will place the ",(0,o.mdx)("inlineCode",{parentName:"p"},"react-py")," service worker in a subdirectory of your build directory."),(0,o.mdx)("p",null,"To register the service worker, first copy the service worker to your public directory:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"cp node_modules/react-py/dist/workers/service-worker.js public/react-py-sw.js\n")),(0,o.mdx)("p",null,"Then, register the service worker in the entrypoint of your app. Ensure that you register the service worker on the client side only:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-tsx"},"\"use client\";\n\n...\n\nuseEffect(() => {\n  navigator.serviceWorker\n    .register('/react-py-sw.js')\n    .then((registration) =>\n      console.log(\n        'Service Worker registration successful with scope: ',\n        registration.scope\n      )\n    )\n    .catch((err) => console.log('Service Worker registration failed: ', err))\n}, [])\n")),(0,o.mdx)("admonition",{type:"note"},(0,o.mdx)("p",{parentName:"admonition"},"You will need to copy the service worker to the root of your build directory if you update ",(0,o.mdx)("inlineCode",{parentName:"p"},"react-py")," to a new version.")))}l.isMDXComponent=!0}}]);