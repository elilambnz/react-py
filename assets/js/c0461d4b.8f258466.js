"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[513],{2552:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>n,metadata:()=>c,toc:()=>a});var o=r(4848),i=r(8453);const n={sidebar_position:3},s="Usage with Vite",c={id:"introduction/vite-usage",title:"Usage with Vite",description:"Calls to react-py hooks will not work with Vite during dev mode due to web workers not being included in the dev build. To view your site with react-py enabled, you must build your site and serve it.",source:"@site/docs/introduction/vite-usage.md",sourceDirName:"introduction",slug:"/introduction/vite-usage",permalink:"/react-py/docs/introduction/vite-usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/react-py/docs/introduction/usage"},next:{title:"Usage with Next.js",permalink:"/react-py/docs/introduction/nextjs-usage"}},d={},a=[{value:"Service worker",id:"service-worker",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.useMDXComponents)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"usage-with-vite",children:"Usage with Vite"}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["Calls to ",(0,o.jsx)(t.code,{children:"react-py"})," hooks will not work with ",(0,o.jsx)(t.a,{href:"https://vitejs.dev",children:"Vite"})," during dev mode due to web workers not being included in the dev build. To view your site with ",(0,o.jsx)(t.code,{children:"react-py"})," enabled, you must build your site and serve it."]})}),"\n",(0,o.jsx)(t.h2,{id:"service-worker",children:"Service worker"}),"\n",(0,o.jsxs)(t.p,{children:["The service worker that handles ",(0,o.jsx)(t.code,{children:"stdin"})," must be accessible from the root of your site to handle incoming fetch requests. By default, Vite will place the ",(0,o.jsx)(t.code,{children:"react-py"})," service worker in a subdirectory of your build directory."]}),"\n",(0,o.jsx)(t.p,{children:"To register the service worker, first copy the service worker to your public directory:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"cp node_modules/react-py/dist/workers/service-worker.js public/react-py-sw.js\n"})}),"\n",(0,o.jsx)(t.p,{children:"Then, register the service worker in the entrypoint of your app:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"useEffect(() => {\n  navigator.serviceWorker\n    .register('/react-py-sw.js')\n    .then((registration) =>\n      console.log(\n        'Service Worker registration successful with scope: ',\n        registration.scope\n      )\n    )\n    .catch((err) => console.log('Service Worker registration failed: ', err))\n}, [])\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["You will need to copy the service worker to the root of your build directory if you update ",(0,o.jsx)(t.code,{children:"react-py"})," to a new version."]})})]})}function l(e={}){const{wrapper:t}={...(0,i.useMDXComponents)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.r(t),r.d(t,{MDXProvider:()=>c,useMDXComponents:()=>s});var o=r(6540);const i={},n=o.createContext(i);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);